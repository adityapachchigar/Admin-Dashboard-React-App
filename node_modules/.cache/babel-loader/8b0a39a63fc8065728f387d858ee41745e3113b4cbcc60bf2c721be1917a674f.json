{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Documents/Challenge/dashboard/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './info.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initial = data;\nconst Main = () => {\n  _s();\n  const itemsPerPage = 10;\n  const [jsonData, setJsonData] = useState(initial);\n  const [editableId, setEditableId] = useState(null);\n  const [editedData, setEditedData] = useState({\n    name: '',\n    email: '',\n    role: ''\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const deleteItemById = id => {\n    setJsonData(prevData => prevData.filter(item => item.id !== id));\n  };\n  const startEditing = (id, name, email, role) => {\n    setEditableId(id);\n    setEditedData({\n      name,\n      email,\n      role\n    });\n  };\n  const cancelEditing = () => {\n    setEditableId(null);\n    setEditedData({\n      name: '',\n      email: '',\n      role: ''\n    });\n  };\n  const saveEditing = id => {\n    setJsonData(prevData => prevData.map(item => item.id === id ? {\n      ...item,\n      name: editedData.name,\n      email: editedData.email,\n      role: editedData.role\n    } : item));\n    setEditableId(null);\n    setEditedData({\n      name: '',\n      email: '',\n      role: ''\n    });\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n  const handleRowSelection = id => {\n    setSelectedRows(prevSelectedRows => {\n      if (prevSelectedRows.includes(id)) {\n        // Deselect the row if it's already selected\n        return prevSelectedRows.filter(rowId => rowId !== id);\n      } else {\n        // Select the row if it's not selected\n        return [...prevSelectedRows, id];\n      }\n    });\n  };\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  const deleteSelectedRows = () => {\n    setJsonData(prevData => prevData.filter(item => !selectedRows.includes(item.id)));\n    setSelectedRows([]);\n    setSelectAll(false);\n  };\n  const filteredData = jsonData.filter(item => Object.values(item).some(prop => typeof prop === 'string' && prop.toLowerCase().includes(searchTerm.toLowerCase())));\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n  const visibleData = filteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const handleSelectAll = () => {\n    setSelectAll(!selectAll);\n    setSelectedRows(selectAll ? [] : visibleData.map(item => item.id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"90%\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"userTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectAll,\n                onChange: handleSelectAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: visibleData.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: selectedRows.includes(user.id) ? '#ddd' : 'inherit'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: editableId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.name,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this) : user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editableId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.email,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this) : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editableId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.role,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  role: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this) : user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editableId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"save\",\n                  onClick: () => saveEditing(user.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"cancel\",\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"edit\",\n                  onClick: () => startEditing(user.id, user.name, user.email, user.role),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"delete\",\n                  onClick: () => deleteItemById(user.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedRows.includes(user.id),\n                onChange: () => handleRowSelection(user.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteSelectedRows,\n        disabled: selectedRows.length === 0,\n        children: \"Delete Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"first-page\",\n        onClick: () => handlePageChange(1),\n        children: \"First Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"previous-page\",\n        onClick: () => handlePageChange(currentPage - 1),\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: 'auto',\n          display: 'flex'\n        },\n        children: [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(index + 1),\n          style: {\n            margin: '0 5px',\n            fontWeight: currentPage === index + 1 ? 'bold' : 'normal'\n          },\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"next-page\",\n        onClick: () => handlePageChange(currentPage + 1),\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"last-page\",\n        onClick: () => handlePageChange(totalPages),\n        children: \"Last Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"1z5W+7ZQqFeNp8J1B1+vQS5Z5nI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","initial","Main","_s","itemsPerPage","jsonData","setJsonData","editableId","setEditableId","editedData","setEditedData","name","email","role","searchTerm","setSearchTerm","currentPage","setCurrentPage","selectedRows","setSelectedRows","selectAll","setSelectAll","deleteItemById","id","prevData","filter","item","startEditing","cancelEditing","saveEditing","map","handleSearch","e","target","value","handleRowSelection","prevSelectedRows","includes","rowId","handlePageChange","newPage","totalPages","deleteSelectedRows","filteredData","Object","values","some","prop","toLowerCase","Math","ceil","length","visibleData","slice","handleSelectAll","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","type","placeholder","onChange","checked","user","backgroundColor","class","onClick","disabled","display","justifyContent","marginTop","overflowX","Array","_","index","fontWeight","_c","$RefreshReg$"],"sources":["/Users/aditya/Documents/Challenge/dashboard/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport data from './info.json'\n\nconst initial=data;\n\nconst Main = () => {\n\n    const itemsPerPage = 10;\n\n    const [jsonData, setJsonData] = useState(initial);\n    const [editableId, setEditableId] = useState(null);\n    const [editedData, setEditedData] = useState({ name: '', email: '',role: ''});\n    const [searchTerm, setSearchTerm] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [selectAll, setSelectAll] = useState(false);\n\n    const deleteItemById = (id) => {\n        setJsonData(prevData => prevData.filter(item => item.id !== id));\n      };\n    \n      const startEditing = (id, name, email, role) => {\n        setEditableId(id);\n        setEditedData({ name, email, role });\n      };\n    \n      const cancelEditing = () => {\n        setEditableId(null);\n        setEditedData({ name: '', email: '',role:'' });\n      };\n    \n      const saveEditing = (id) => {\n        setJsonData(prevData =>\n          prevData.map(item =>\n            item.id === id\n              ? { ...item, name: editedData.name, email: editedData.email, role:editedData.role }\n              : item\n          )\n        );\n        setEditableId(null);\n        setEditedData({ name: '', email: '',role:'' });\n      };\n    \n      const handleSearch = (e) => {\n        setSearchTerm(e.target.value);\n        setCurrentPage(1); // Reset to first page when searching\n      };\n    \n      const handleRowSelection = (id) => {\n        setSelectedRows(prevSelectedRows => {\n          if (prevSelectedRows.includes(id)) {\n            // Deselect the row if it's already selected\n            return prevSelectedRows.filter(rowId => rowId !== id);\n          } else {\n            // Select the row if it's not selected\n            return [...prevSelectedRows, id];\n          }\n        });\n      };\n    \n      const handlePageChange = (newPage) => {\n        if (newPage >= 1 && newPage <= totalPages) {\n          setCurrentPage(newPage);\n        }\n      };\n    \n      const deleteSelectedRows = () => {\n        setJsonData(prevData => prevData.filter(item => !selectedRows.includes(item.id)));\n        setSelectedRows([]);\n        setSelectAll(false);\n      };\n    \n      const filteredData = jsonData.filter(item =>\n        Object.values(item).some(prop =>\n          typeof prop === 'string' && prop.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      );\n    \n      const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n    \n      const visibleData = filteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n    \n      const handleSelectAll = () => {\n        setSelectAll(!selectAll);\n        setSelectedRows(selectAll ? [] : visibleData.map(item => item.id));\n      };\n\n    return (\n        <>\n            <h1>Admin Dashboard</h1>\n            \n            <div style={{width:\"90%\", margin:\"auto\"}}>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={searchTerm}\n                onChange={handleSearch}\n                \n            />\n            <table id=\"userTable\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Role</th>\n                    <th>Actions</th>\n                    <th>\n                    <input\n                        type=\"checkbox\"\n                        checked={selectAll}\n                        onChange={handleSelectAll}\n                    />\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                \n            \n                {visibleData.map(user=>(\n                    <tr key={user.id}\n              style={{ backgroundColor: selectedRows.includes(user.id) ? '#ddd' : 'inherit' }}\n            >\n                        <td>\n                        {editableId === user.id ? (\n                            <input\n                            type=\"text\"\n                            value={editedData.name}\n                            onChange={(e) => setEditedData({ ...editedData, name: e.target.value })}\n                            />\n                        ) : (\n                            user.name\n                        )}\n                        </td>\n                        <td>\n                        {editableId === user.id ? (\n                            <input\n                            type=\"text\"\n                            value={editedData.email}\n                            onChange={(e) => setEditedData({ ...editedData, email: e.target.value })}\n                            />\n                        ) : (\n                            user.email\n                        )}\n                        </td>\n                        <td>\n                        {editableId === user.id ? (\n                            <input\n                            type=\"text\"\n                            value={editedData.role}\n                            onChange={(e) => setEditedData({ ...editedData, role: e.target.value })}\n                            />\n                        ) : (\n                            user.role\n                        )}</td>\n                        <td>\n                        {editableId === user.id ? (\n                            <>\n                            <button class=\"save\" onClick={() => saveEditing(user.id)}>Save</button>\n                            <button class=\"cancel\" onClick={cancelEditing}>Cancel</button>\n                            </>\n                        ) : (\n                            <>\n                            <button class=\"edit\" onClick={() => startEditing(user.id, user.name, user.email, user.role)}>Edit</button>\n                            <button class=\"delete\" onClick={() => deleteItemById(user.id)}>Delete</button>\n                            </>\n                        )}\n                        </td>\n                        <td>\n                            <input\n                            type=\"checkbox\"\n                            checked={selectedRows.includes(user.id)}\n                            onChange={() => handleRowSelection(user.id)}\n                            />\n                        </td>\n                    </tr>\n                ))}\n            \n            </tbody>\n        </table>\n        </div>                   \n        <div>\n          <button onClick={deleteSelectedRows} disabled={selectedRows.length === 0}>\n            Delete Selected\n          </button>\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '10px' }}>\n        <button class=\"first-page\" onClick={() => handlePageChange(1)}>First Page</button>\n        <button class=\"previous-page\" onClick={() => handlePageChange(currentPage - 1)}>Previous Page</button>\n        <div style={{ overflowX: 'auto', display: 'flex' }}>\n          {[...Array(totalPages)].map((_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              style={{ margin: '0 5px', fontWeight: currentPage === index + 1 ? 'bold' : 'normal' }}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n        <button class=\"next-page\" onClick={() => handlePageChange(currentPage + 1)}>Next Page</button>\n        <button class=\"last-page\" onClick={() => handlePageChange(totalPages)}>Last Page</button>\n      </div>\n    \n        </>\n    )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}