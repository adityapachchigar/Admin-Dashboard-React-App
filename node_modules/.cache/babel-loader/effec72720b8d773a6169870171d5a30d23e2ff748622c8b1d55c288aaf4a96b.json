{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Documents/Challenge/dashboard/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './info.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initial = data;\nconst Main = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(initial);\n  const [editableId, setEditableId] = useState(null);\n  const [editedData, setEditedData] = useState({\n    name: '',\n    email: '',\n    role: ''\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const deleteItemById = id => {\n    setJsonData(prevData => prevData.filter(item => item.id !== id));\n  };\n  const startEditing = (id, name, email, role) => {\n    setEditableId(id);\n    setEditedData({\n      name,\n      email,\n      role\n    });\n  };\n  const cancelEditing = () => {\n    setEditableId(null);\n    setEditedData({\n      name: '',\n      email: '',\n      role: ''\n    });\n  };\n  const saveEditing = id => {\n    setJsonData(prevData => prevData.map(item => item.id === id ? {\n      ...item,\n      name: editedData.name,\n      email: editedData.email,\n      role: editedData.role\n    } : item));\n    setEditableId(null);\n    setEditedData({\n      name: '',\n      email: '',\n      role: ''\n    });\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  var filteredData = jsonData.filter(item => Object.values(item).some(prop => typeof prop === 'string' && prop.toLowerCase().includes(searchTerm.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"userTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredData.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editableId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedData.name,\n              onChange: e => setEditedData({\n                ...editedData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this) : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editableId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedData.email,\n              onChange: e => setEditedData({\n                ...editedData,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this) : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editableId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedData.role,\n              onChange: e => setEditedData({\n                ...editedData,\n                role: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this) : user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editableId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEditing(user.id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEditing,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEditing(user.id, user.name, user.email, user.role),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteItemById(user.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onclick: \"deleteSelected()\",\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"yQMqBSduKiwKGZ61NRrP8SvZsyc=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","initial","Main","_s","jsonData","setJsonData","editableId","setEditableId","editedData","setEditedData","name","email","role","searchTerm","setSearchTerm","deleteItemById","id","prevData","filter","item","startEditing","cancelEditing","saveEditing","map","handleSearch","e","target","value","filteredData","Object","values","some","prop","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","user","onClick","onclick","_c","$RefreshReg$"],"sources":["/Users/aditya/Documents/Challenge/dashboard/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport data from './info.json'\n\nconst initial=data;\n\nconst Main = () => {\n\n    const [jsonData, setJsonData] = useState(initial);\n    const [editableId, setEditableId] = useState(null);\n    const [editedData, setEditedData] = useState({ name: '', email: '',role: ''});\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const deleteItemById = (id) => {\n        setJsonData(prevData => prevData.filter(item => item.id !== id));\n      };\n    \n      const startEditing = (id, name, email, role) => {\n        setEditableId(id);\n        setEditedData({ name, email,role });\n      };\n    \n      const cancelEditing = () => {\n        setEditableId(null);\n        setEditedData({ name: '', email: '',role: '' });\n      };\n    \n      const saveEditing = (id) => {\n        setJsonData(prevData =>\n          prevData.map(item =>\n            item.id === id\n              ? { ...item, name: editedData.name, email: editedData.email, role:editedData.role }\n              : item\n          )\n        );\n        setEditableId(null);\n        setEditedData({ name: '', email: '', role: '' });\n      };\n\n      const handleSearch = (e) => {\n        setSearchTerm(e.target.value);\n      };\n    \n      var filteredData = jsonData.filter(item =>\n        Object.values(item).some(prop =>\n          typeof prop === 'string' && prop.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      );\n    \n\n    return (\n        <>\n            <h1>Admin Dashboard</h1>\n            \n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={searchTerm}\n                onChange={handleSearch}\n            />\n            \n            <table id=\"userTable\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Role</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n            \n                {filteredData.map(user=>(\n                    <tr key={user.id}>\n                        <td>\n                        {editableId === user.id ? (\n                            <input\n                            type=\"text\"\n                            value={editedData.name}\n                            onChange={(e) => setEditedData({ ...editedData, name: e.target.value })}\n                            />\n                        ) : (\n                            user.name\n                        )}\n                        </td>\n                        <td>\n                        {editableId === user.id ? (\n                            <input\n                            type=\"text\"\n                            value={editedData.email}\n                            onChange={(e) => setEditedData({ ...editedData, email: e.target.value })}\n                            />\n                        ) : (\n                            user.email\n                        )}\n                        </td>\n                        <td>\n                        {editableId === user.id ? (\n                            <input\n                            type=\"text\"\n                            value={editedData.role}\n                            onChange={(e) => setEditedData({ ...editedData, role: e.target.value })}\n                            />\n                        ) : (\n                            user.role\n                        )}</td>\n                        <td>\n                        {editableId === user.id ? (\n                            <>\n                            <button onClick={() => saveEditing(user.id)}>Save</button>\n                            <button onClick={cancelEditing}>Cancel</button>\n                            </>\n                        ) : (\n                            <>\n                            <button onClick={() => startEditing(user.id, user.name, user.email, user.role)}>Edit</button>\n                            <button onClick={() => deleteItemById(user.id)}>Delete</button>\n                            </>\n                        )}\n                        </td>\n                    </tr>\n                ))}\n            \n            </tbody>\n        </table>\n        <button onclick=\"deleteSelected()\">Delete Selected</button>\n        </>\n    )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}